import { useEffect, useState } from 'react';
import styles from './App.module.scss';

export default function App() {
  const [guests, setGuests] = useState([]);
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [loading, setLoading] = useState(true);

  // Attending status
  const [attendingStatus, setAttendingStatus] = useState(false);

  // base url
  const baseUrl = 'http://localhost:4000';

  // Getting all guests (aka GET /guests)
  async function fetchGuests() {
    const response = await fetch(`${baseUrl}/guests`);
    const allGuests = await response.json();
    setGuests([...allGuests]);
  }
  useEffect(() => {
    fetchGuests().catch((error) => console.log(error));
  }, []);

  // Creating a new guest (aka POST /guests)
  async function newGuest() {
    const response = await fetch(`${baseUrl}/guests`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ firstName: firstName, lastName: lastName }),
    });
    const createdGuest = await response.json();
    const updatedGuestList = [...guests, createdGuest];
    setGuests(updatedGuestList);
  }

  // getting new guest from last name input

  const handleChange = (event) => {
    // 3. update state on change event
    setLastName(event.currentTarget.value);
  };

  const handleKeyDown = (event) => {
    if (event.key === 'Enter') {
      setGuests(event.target.value);
    }
  };

  /*    // Getting a single guest (aka GET /guests/:id)
    const response = await fetch(`${baseUrl}/guests/:id`);
    const guest = await response.json();



    // Updating a guest (aka PUT /guests/:id)
    const response = await fetch(`${baseUrl}/guests/1`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ attending: true }),
    });
    const updatedGuest = await response.json();


    // Deleting a guest (aka DELETE /guests/:id)
    const response = await fetch(`${baseUrl}/guests/1`, { method: 'DELETE' });
    const deletedGuest = await response.json(); */

  return (
    <div className={styles.App} data-test-id="guest">
      <header>
        <h1>Guest List App</h1>
      </header>

      <form
        onSubmit={(event) => {
          event.preventDefault();
        }}
      >
        <label>
          <input
            placeholder="First name"
            value={firstName}
            onChange={(event) => {
              // 3. update state on change event
              setFirstName(event.currentTarget.value);
            }}
          />
        </label>
        <br />
        <label>
          <input
            placeholder="Last name"
            value={lastName}
            onChange={handleChange}
            onKeyDown={handleKeyDown}
          />
          <kbd>Return</kbd>
        </label>

        <h2>Guests</h2>
        {attendingStatus}
        <label aria-label="attending status">
          Attending
          <input
            checked={attendingStatus}
            type="checkbox"
            // 3. update the state value with the event.currentTarget.value
            onChange={(event) => {
              setAttendingStatus(event.currentTarget.checked);
            }}
          />
        </label>
        <div>
          <p></p>
        </div>
      </form>
    </div>
  );
}

// // 1. copy state
// const newUsers = [...users];
// // 2. update state
// newUsers.push(data.results[0]);
// // 3. set new State
// setUsers(newUsers);

// using spread operator syntax

/*   useEffect(() => {
    async function firstRenderFetch() {
      const response = await fetch(`${baseUrl}/guests`);

      const data = await response.json();

      setGuests([data.results[0]]);
    }

    firstRenderFetch().catch((error) => {
      console.log(error);
    });
  }, []); */

/*   return (
    <div className={styles.App}>
      <form onSubmit={handleAddGuest}>
        <label htmlFor="firstName">First Name:</label>
        <input
          type="text"
          id="firstName"
          value={firstName}
          onChange={handleFirstNameChange}
        />
        <label htmlFor="lastName">
          Last Name:
          <input
            type="text"
            id="lastName"
            value={lastName}
            onChange={handleLastNameChange}
          />
        </label>
      </form>
    </div>
  ); */

/* import { Fragment, useEffect, useState } from 'react';
import styles from './App.module.scss'; */

// Create state variables
/* const [guestList, setGuestList] = useState([]);
const [firstName, setFirstName] = useState('');
const [lastName, setLastName] = useState('');
const [loading, setLoading] = useState(''); */

// // Base URL
// const baseUrl = 'http://localhost:4000';

/* // Getting all guests (aka GET /guests)
const response = await fetch(`${baseUrl}/guests`);

const allGuests = await response.json();

// Getting a single guest (aka GET /guests/:id)
const response = await fetch(`${baseUrl}/guests/:id`);
const guest = await response.json();

// Creating a new guest (aka POST /guests)
const response = await fetch(`${baseUrl}/guests`, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({ firstName: 'Karl', lastName: 'Horky' }),
});
const createdGuest = await response.json();

// Updating a guest (aka PUT /guests/:id)
const response = await fetch(`${baseUrl}/guests/1`, {
  method: 'PUT',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({ attending: true }),
});
const updatedGuest = await response.json();

// Deleting a guest (aka DELETE /guests/:id)
const response = await fetch(`${baseUrl}/guests/1`, { method: 'DELETE' });
const deletedGuest = await response.json(); */

// export default function App() {
/*  const [allGuests, setAllGuests] = useState([]);
  const [newGuest, setNewGuest] = useState(''); */

// 1. Create state for input data checkbox
/*   const [attendingStatus, setAttendingStatus] = useState(false);
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState(''); */
